{"version":3,"sources":["assets/images/image1.jpg","components/Navbar.js","components/Footer/Footer.js","config/api.js","components/ImageAndWelcome.js","components/CityCard.js","components/CityList.js","components/SearchCity.js","pages/Home.js","components/CategoryList.js","components/SearchKeyword.js","components/SearchCriteria.js","components/RatingLabel.js","components/RestaurantCard.js","pages/City.js","components/RestaurantProfile.js","components/Review.js","pages/RestaurantDetail.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","style","color","fontWeight","to","Footer","href","API","zomato","base_url","api_key","process","ImportAndWelcome","marginBottom","src","mainImage","width","alt","CityCard","props","city","name","country_flag_url","height","country_name","id","_renderCityList","cities","length","map","key","CityList","title","showSubtittle","subtittle","SearchCity","type","placeholder","value","onChange","onChangeKeyword","onClick","onClickSearch","disabled","disabledStatus","Home","changeKeywordHandler","event","setState","keyword","target","getFeaturedCities","url","axios","get","headers","params","city_ids","then","data","status","featuredCities","location_suggestions","console","log","state","catch","err","searchHandler","q","citiesSearchResult","cityKeywordSearch","buttonDisabled","this","ImageAndWelcome","marinTop","Component","CategoryList","categories","category","categoryClickHandler","categorySelected","SearchKeyword","changekeywordHandler","onClickAddToCriteria","SearchCriteria","marginTop","criteria","cri","index","criteriaName","aria-hidden","removeCriteriaHandler","RatingLabel","backgroundColor","labelColor","borderColor","text","RestaurantCard","restaurant","thumb","borderRadius","location","locality","address","user_rating","rating_color","aggregate_rating","rating_text","cuisines","currency","average_cost_for_two","textDecoration","City","getCityData","city_id","newCriteria","push","filter","addToCriteriaHandler","splice","getCategoriesData","transformCategoriesData","restaurants","entity_id","entity_type","renderRestaurantList","match","RestaurantProfile","class","featured_image","votes","Review","border","review","user","profile_image","foodle_level_num","foodle_level","foodle_color","review_time_friendly","rating","review_text","RestaurantDetail","getRestaurantData","restaurant_id","res_id","getReviewsData","reviews","user_reviews","App","path","exact","component","Boolean","window","hostname","require","config","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2987cf86.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image1.eb32f8ea.jpg\";","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Navbar = () => (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary sticky-top\">\n        <Link style={{color: \"white\", fontWeight: 'bold'}} className=\"navbar-brand\" to=\"/\"> Zomato Restaurant </Link>\n    </nav>\n)\n\nexport default Navbar","import React from 'react'\nimport './Footer.css'\n\nconst Footer = () => (\n    <footer className=\"my-footer\">\n        <div className=\"container\">\n            <div className=\"row\">\n            <div className=\"col-sm-4 text-center\">\n                <h5> About Zomato Restaurant </h5>\n                <ul>\n                    <li> \n                        <a className=\"text-info\" href=\"/#\"> About </a> \n                    </li>\n                    <li>\n                        <a className=\"text-info\" href=\"/#\"> Contact Us </a>\n                    </li>\n                </ul>\n            </div>\n            <div className=\"col-sm-4 text-center\">\n                <h5> Support </h5>\n                <ul>\n                    <li> \n                        <a className=\"text-info\" href=\"/#\"> FAQ </a> \n                    </li>\n                    <li>\n                        <a className=\"text-info\" href=\"/#\"> Help desk </a>\n                    </li>\n                    <li>\n                        <a className=\"text-info\" href=\"/#\"> Forums </a>\n                    </li>\n                </ul>\n            </div>\n            <div className=\"col-sm-4 text-center\">\n                <h5> Download App </h5>\n                <ul>\n                    <li> \n                        <a className=\"text-info\" href=\"/#\"> Google Play </a> \n                    </li>\n                    <li>\n                        <a className=\"text-info\" href=\"/#\"> App Store </a>\n                    </li>\n                </ul>\n            </div>\n            </div>\n        </div>\n        <div className=\"social-networks\">\n            <a className=\"twitter\" href=\"/#\">\n                <i className=\"fa fa-twitter\"></i>\n            </a>\n            <a className=\"facebook\" href=\"/#\">\n                <i className=\"fa fa-facebook-official\"></i>\n            </a>\n            <a className=\"google\" href=\"/#\">\n                <i className=\"fa fa-google-plus\"></i>\n            </a>\n        </div>\n        <div className=\"text-center footer-copyright\">\n            <p> Copyright &copy; 2019 Zomato Restaurant </p>\n        </div>\n    </footer>\n)\n\nexport default Footer","export const API = {\n    zomato: {\n        base_url: 'https://developers.zomato.com/api/v2.1',\n        api_key: process.env.REACT_APP_API_KEY_ZOMATO\n    }\n}","import React from 'react'\n\nimport mainImage from '../assets/images/image1.jpg'\n\nconst ImportAndWelcome = () => (\n    <div className=\"container-fluid\">\n        <div className=\"row\" style={{marginBottom: 30}}>\n            <img src={mainImage} width=\"100%\" alt=\"aneka-makanan\"></img>\n        </div>\n        <div className=\"row\">\n            <div className=\"col\">\n                <div className=\"card text-white bg-info mb-3 text-center\">\n                    <div className=\"card-header\">\n                        <h1>Welcome to ZomatoRestaurant</h1>\n                    </div>\n                    <div className=\"card-body\">\n                        <h4 className=\"card-title\">The Easiest Way to Find Restaurants and Food</h4>\n                        <p className=\"card-text\">You can grab information about restaurants, cafees, cuisines with just a few clicks.</p>\n                        <p className=\"card-text\">Start by choosing the featured cities below, or search the city name.</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n)\n\nexport default ImportAndWelcome","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst CityCard = (props) => (\n    <div className=\"col-4\">\n        <div className=\"card bg-light mb-3\">\n            <div className=\"card-body\">\n                <div className=\"row\">\n                    <h3 className=\"card-title ml-3\"> {props.city.name} </h3>\n                    <img src={props.city.country_flag_url} className=\"ml-4 mt-2\" width=\"7%\" height=\"1%\" alt=\"aneka-makanan\"></img>\n                </div>\n                <p> {props.city.country_name} </p>\n                <Link to={`/city/${props.city.id}`} className=\"card-text text-info\"> See restaurants in {props.city.name} </Link>\n            </div>\n        </div>\n    </div>\n)\n\nexport default CityCard","import React from 'react'\n\nimport CityCard from './CityCard'\n\nconst CityList = (props) => (\n    <>\n        <div className=\"row\">\n            <div className=\"col-12\">\n                <h3 className=\"mt-3\"> {props.title} </h3>\n                {props.showSubtittle === true && props.subtittle !== '' &&\n                    <h6 className=\"text-muted\"> Search result for keyword `{props.subtittle}` </h6> \n                }\n            </div>\n        </div>\n        <div className=\"row\">\n            {props.cities == null ? (\n                <div className=\"col\">\n                    <p> Loading... </p>\n                </div>\n            ) : (\n                _renderCityList(props.cities)\n            )}\n        </div>\n    </>\n)\n\nconst _renderCityList = (cities)  => {\n    if(cities.length > 0 ) {\n        return (\n            cities.map(city => \n                <CityCard key={city.id} city={city} />    \n            )\n        )\n    } else {\n        return (\n            <div className=\"col\">\n                <p className=\"text-primary\"> Data not found </p>\n            </div>\n        )\n    }\n}\n\nexport default CityList","import React from 'react'\n\nconst SearchCity = (props) => (\n    <div className=\"row\" style={{marginBottom: 30}}>\n        <div className=\"col\">\n            <h3> Search City </h3>\n            <div className=\"card\">\n                <div className=\"card-body\">\n                    <div className=\"form-row\">\n                        <div className=\"col-11\">\n                            <input \n                                className=\"form-control\"\n                                type=\"text\"\n                                placeholder=\"Type Keyword of City Name\"\n                                value={props.value}\n                                onChange={props.onChangeKeyword}/>\n                        </div>\n                        <div className=\"col-1\">\n                            <button\n                                className=\"btn btn-info\"\n                                type=\"button\"\n                                onClick={props.onClickSearch}\n                                disabled={props.disabledStatus}>\n                                    Search\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n)\n\nexport default SearchCity","import React, {Component} from 'react'\nimport axios from 'axios'\nimport { API } from '../config/api'\n\nimport ImageAndWelcome from '../components/ImageAndWelcome'\nimport CityList from '../components/CityList'\nimport SearchCity from '../components/SearchCity'\n\nclass Home extends Component {\n\n    constructor(){\n        super()\n        this.state = {\n          keyword: '',\n          citiesSearchResult: null,\n          featuredCities: null,\n          cityKeywordSearch: '',\n          buttonDisabled: false\n        }\n      }\n    \n    changeKeywordHandler = (event) => {\n        this.setState({ keyword: event.target.value })\n    }\n\n    getFeaturedCities = () => {\n        var url = `${API.zomato.base_url}/cities`\n        axios.get(url, {\n            headers: {\n                'user-key': `${API.zomato.api_key}`\n            },\n            params: {\n                city_ids: \"74,61,10713\"\n            }\n        })\n        .then(({data}) => {\n            if(data.status === \"success\"){\n                this.setState({ featuredCities: data.location_suggestions})\n                console.log(this.state.featuredCities)\n            }\n        })\n        .catch(err => console.log(err))\n    }\n\n    searchHandler = () => {\n        let keyword = this.state.keyword\n        var url = `${API.zomato.base_url}/cities`\n        axios.get(url, {\n            headers: {\n                'user-key': `${API.zomato.api_key}`\n            },\n            params: {\n                q: keyword\n            }\n        })\n        .then(({ data }) => {\n            if(data.status === 'success'){\n                this.setState({ \n                    citiesSearchResult: data.location_suggestions, \n                    keyword: '',\n                    cityKeywordSearch: keyword    \n                })\n                if(this.state.citiesSearchResult === null ) {\n                    this.setState({ buttonDisabled: true })\n                }\n            }\n        })\n        .catch(err => console.log(err))\n    }\n\n    componentDidMount(){\n        this.getFeaturedCities()\n    }\n\n    render(){\n        const citiesDummy = [\n            {\n              id: 72,\n              name: \"Jakarta\",\n              country_name : \"Indonesia\"      \n            },\n            {\n              id: 11052,\n              name: \"Bandung\",\n              country_name: \"Indoensia\"\n            },\n            {\n              id: 170,\n              name: \"Bali\",\n              country_name: \"Indoensia\"\n            }\n          ]\n        return(\n            <>\n                <ImageAndWelcome />\n                <div className=\"container\" style={{marinTop: 30, marginBottom: 30}}>\n                    <CityList title={\"Featured Cities\"} cities={this.state.featuredCities} />\n                    <SearchCity disabledStatus={this.state.buttonDisabled} value={this.state.keyword} onChangeKeyword={this.changeKeywordHandler} onClickSearch={this.searchHandler} />\n                    {\n                        this.state.cityKeywordSearch !== '' ?\n                        <CityList title={\"Search Result\"} showSubtittle={true} subtittle={this.state.cityKeywordSearch} cities={this.state.citiesSearchResult} />\n                        :\n                        null\n                    }\n                </div>\n            </>\n        )\n    }\n}\n\nexport default Home","import React from 'react'\n\nconst CategoryList = (props) => (\n    props.categories ? (\n        <div className=\"list-group\">\n         {props.categories.map(category => (\n             <button key={category.id} onClick={() => props.categoryClickHandler(category)} className={'list-group-item list-group-item-action ' + (props.categorySelected && category.id === props.categorySelected.id ? 'active' : '')}>\n                 {category.name}\n             </button>\n         ))}    \n        </div>\n    ) : (\n        <p> Loading... </p>\n    )\n)\n\nexport default CategoryList","import React from 'react'\n\nconst SearchKeyword = (props) => (\n    <>\n        <h5> Keyword </h5>\n        <div className=\"card\">\n            <div className=\"card-body\">\n                <div className=\"form-row\">\n                    <div className=\"col-10\">\n                        <input \n                            className=\"form-control\"\n                            type=\"text\"\n                            placeholder=\"Type keyword e.g : restaurant's name, location, etc\"\n                            value={props.keyword}\n                            onChange={props.changekeywordHandler}\n                        />\n                    </div>\n                    <div className=\"col\">\n                        <button className=\"btn btn-primary\" type=\"button\" onClick={props.onClickAddToCriteria}>\n                            Add to criteria\n                        </button>\n                    </div>\n                </div>    \n            </div>    \n        </div>\n    </>\n)\n\nexport default SearchKeyword","import React from 'react'\n\nconst SearchCriteria = (props) => (\n    <div className=\"card bg-light mb-3\" style={{marginTop: 20}}>\n        <div className=\"card-body\">\n            <p className=\"card-title\"> Find Restaurants based on criteria : </p>\n            <table className=\"table table-hover\">\n                <tbody>\n                    {props.criteria.map((cri, index) => (\n                        <tr key={index} className=\"table-active\">\n                            <td width=\"40%\"> {cri.criteriaName} </td>\n                            <td width=\"50%\"> {cri.data.name} </td>\n                            <td>\n                                {cri.criteriaName !== 'City' && (\n                                    <i \n                                        className=\"fa fa-times\"\n                                        aria-hidden=\"true\"\n                                        style={{color: 'red'}}\n                                        onClick={() => props.removeCriteriaHandler(index)}\n                                    >\n                                    </i>\n                                )}\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <div className=\"pull-right\">\n                <button className=\"btn btn-primary\" type=\"button\" onClick={props.onClickSearch}>\n                    Search\n                </button>\n            </div>\n        </div>\n    </div>\n)\n\nexport default SearchCriteria","import React from 'react'\n\nconst RatingLabel = (props) => (\n    <div \n        className=\"btn btn-sm\"\n        style={{\n                color: \"white\", \n                backgroundColor: `#${props.labelColor}`, \n                borderColor: `#${props.labelColor}`}}>\n                {`${props.text}`}\n    </div>\n)\n\nexport default RatingLabel","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nimport RatingLabel from './RatingLabel'\n\nconst RestaurantCard = (props) => (\n    <div className=\"col-6\" style={{marginBottom: 20}}>\n        <div className=\"card\">\n            <div className=\"card-header\">\n                <div className=\"row\">\n                    <div className=\"col-3\">\n                        <img className=\"img-responsive\" src={props.restaurant.thumb} alt=\"\" style={{borderRadius: 5, width: 100}}></img>\n                    </div>\n                    <div className=\"col-9\">\n                        <h4 className=\"text-success\" style={{fontWeight: 800}}>\n                            {props.restaurant.name}\n                        </h4>\n                        <h6>{props.restaurant.location.locality}</h6>\n                        <h6 className=\"text-muted\">{props.restaurant.location.address}</h6>\n                    </div>\n                </div>\n            </div>\n            <div className=\"card-body\">\n                <table className=\"table\">\n                    <tbody>\n                        <tr>\n                            <td> Rating </td>\n                            <td>\n                                <RatingLabel\n                                    labelColor={props.restaurant.user_rating.rating_color}\n                                    text={`${props.restaurant.user_rating.aggregate_rating} (${props.restaurant.user_rating.rating_text})`}\n                                />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td> Cuisines </td>\n                            <td>\n                                {props.restaurant.cuisines}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td> Cost for two </td>\n                            <td> {props.restaurant.currency + ' ' + props.restaurant.average_cost_for_two} </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <div className=\"card-footer\">\n                <Link to={`/restaurant/${props.restaurant.id}`} style={{textDecoration: 'none'}}>\n                    <button type=\"button\" className=\"btn btn-outline-success btn-block\">\n                        View Restaurant Details\n                    </button>\n                </Link>\n            </div>\n        </div>\n    </div>\n)\n\nexport default RestaurantCard","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { API } from '../config/api'\n\nimport CategoryList from '../components/CategoryList'\nimport SearchKeyword from '../components/SearchKeyword'\nimport SearchCriteria from '../components/SearchCriteria'\nimport RestaurantCard from '../components/RestaurantCard'\n\nconst restaurants = [\n    {\n        \"restaurant\": {\n          \"id\": \"18875696\",\n          \"name\": \"Kintaro Sushi\",\n          \"location\": {\n            \"address\": \"Jl. Suryo No. 20, Senopati, Jakarta\",\n            \"locality\": \"Senopati\",\n          },\n          \"cuisines\": \"Sushi, Japanese\",\n          \"average_cost_for_two\": 200000,\n          \"currency\": \"IDR\",\n          \"thumb\": \"https://b.zmtcdn.com/data/pictures/chains/5/18530405/0feeddcbe877a8e27526a8cf5b501edf.jpg?fit=around%7C200%3A200&crop=200%3A200%3B%2A%2C%2A\",\n          \"user_rating\": {\n            \"aggregate_rating\": \"4.9\",\n            \"rating_text\": \"Excellent\",\n            \"rating_color\": \"3F7E00\",\n            \"votes\": \"1358\"\n          },\n        }\n      },\n      {\n        \"restaurant\": {\n          \"id\": \"18875696\",\n          \"name\": \"Kintaro Sushi\",\n          \"location\": {\n            \"address\": \"Jl. Suryo No. 20, Senopati, Jakarta\",\n            \"locality\": \"Senopati\",\n          },\n          \"cuisines\": \"Sushi, Japanese\",\n          \"average_cost_for_two\": 200000,\n          \"currency\": \"IDR\",\n          \"thumb\": \"https://b.zmtcdn.com/data/pictures/chains/5/18530405/0feeddcbe877a8e27526a8cf5b501edf.jpg?fit=around%7C200%3A200&crop=200%3A200%3B%2A%2C%2A\",\n          \"user_rating\": {\n            \"aggregate_rating\": \"4.9\",\n            \"rating_text\": \"Excellent\",\n            \"rating_color\": \"3F7E00\",\n            \"votes\": \"1358\"\n          },\n        }\n      }\n]\n\nclass City extends Component {\n\n    constructor(){\n        super()\n        this.state = {\n            city: null,\n            categories: null,\n            categorySelected: null,\n            keyword: '',\n            criteria: [],\n            restaurants:[]\n        }\n    }\n\n    getCityData = (city_id) => {\n        let url = `${API.zomato.base_url}/cities`\n        axios.get(url, {\n            headers: {\n                'user-key': API.zomato.api_key\n            },\n            params: {\n                city_ids: `${city_id}`\n            }\n        })\n        .then(({ data }) => {\n            let city = data.location_suggestions[0]\n            let newCriteria = {\n                criteriaName: 'City',\n                data: city\n            }\n            let criteria = [...this.state.criteria]\n            criteria.push(newCriteria)\n            this.setState({ city, criteria })\n        })\n        .catch(err => console.log(err))\n    }\n\n    transformCategoriesData(categories){\n        let categoriesTransformed = categories.map(category => {\n            return category.categories\n        })\n        return categoriesTransformed\n    }\n\n    categoryClickHandler = (category) => {\n        let criteria = [...this.state.criteria]\n        console.log(category)\n        let newCriteria = {\n            criteriaName: 'Category',\n            data: category\n        }\n        criteria = criteria.filter(cri => cri.criteriaName !== 'Category' )\n        criteria.push(newCriteria)\n        this.setState({categorySelected: category, criteria})\n    }\n\n    changekeywordHandler = (event) => {\n        this.setState({ keyword: event.target.value})\n    }\n\n    addToCriteriaHandler = () => {\n        let criteria = [...this.state.criteria]\n        criteria = criteria.filter(cri => cri.criteriaName !== 'Keyword')\n        let newCriteria = {\n            criteriaName: 'Keyword',\n            data: {\n                name: this.state.keyword\n            }\n        }\n        criteria.push(newCriteria)\n        this.setState({keyword: '', criteria})\n    }\n\n    removeCriteriaHandler = (index) => {\n        let criteria = [...this.state.criteria]\n        criteria.splice(index, 1)\n        this.setState({criteria})\n    }\n\n    getCategoriesData = () => {\n        let url = `${API.zomato.base_url}/categories`\n        axios.get(url, {\n            headers: {\n                'user-key': API.zomato.api_key\n            }\n        })\n        .then(({ data }) => {\n            let categories = this.transformCategoriesData(data.categories)\n            this.setState({ categories })\n        })\n        .catch(err => console.log(err))\n    }\n\n    searchHandler = () => {\n        this.setState({restaurants: null})\n        let url = `${API.zomato.base_url}/search`\n        let params = {}\n\n        for (let cri of this.state.criteria){\n            switch(cri.criteriaName){\n                case 'City':\n                    params.entity_id = cri.data.id\n                    params.entity_type = 'city'\n                    break\n                case 'Category':\n                    params.category = cri.data.id\n                    break\n                case 'Keyword':\n                    params.q = cri.data.name\n                    break\n                default:\n                    break\n            }\n        }\n\n        axios.get(url, {\n            headers: {\n                'user-key': API.zomato.api_key\n            },\n            params\n        })\n        .then(({ data }) => {\n            this.setState({restaurants: data.restaurants})\n        })\n        .catch(err => console.log(err))\n    }\n\n    renderRestaurantList = () => {\n        if(this.state.restaurants == null){\n            return (\n                <div className=\"col\">\n                    <p> Loading... </p>\n                </div>\n            )\n        }\n\n        if(this.state.restaurants.length > 0){\n            return (\n                this.state.restaurants.map(({ restaurant }) => (\n                    <RestaurantCard key={restaurant.id} restaurant={restaurant} />\n                ))\n            )\n        } else {\n            return (\n                <div className=\"col\">\n                    <p> No Data available. Please select criteria, and click Search </p>\n                </div>\n            )\n        }\n    }\n\n    componentDidMount(){\n        let {city_id} = this.props.match.params\n        this.getCityData(city_id)\n\n        this.getCategoriesData()\n    }\n\n    render(){\n        return (\n           <div className=\"container-fluid\" style={{marginTop: 30, marginBottom: 30}}>\n               {this.state.city && (\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h4 style={{color: \"#07f7bf\"}}>\n                            Restaurant in {this.state.city.name} , Country {this.state.city.country_name}\n                        </h4>\n                    </div>\n                </div>\n               )}\n               <div className=\"row\">\n                   <div className=\"col-3\">\n                       <h5> Categories </h5>\n                       <CategoryList \n                        categories={this.state.categories} \n                        categorySelected={this.state.categorySelected}\n                        categoryClickHandler={(category) => this.categoryClickHandler(category)}\n                        />\n                   </div>\n                   <div className=\"col\">\n                    <SearchKeyword onClickAddToCriteria={this.addToCriteriaHandler} keyword={this.state.keyword} changekeywordHandler={this.changekeywordHandler}/>\n                    <SearchCriteria criteria={this.state.criteria} removeCriteriaHandler={(index) => this.removeCriteriaHandler(index)} onClickSearch={this.searchHandler} />\n                    <div className=\"row\">\n                        <div className=\"col\" style={{marginBottom: 10}}>\n                            <h4 className=\"text-success\"> Restaurant List </h4>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        {this.renderRestaurantList()}\n                    </div>\n                   </div>\n               </div>\n           </div>\n        )\n    }\n}\n\nexport default City","import React from 'react'\n\nimport RatingLabel from './RatingLabel'\n\nconst RestaurantProfile = (props) => (\n    <div className=\"card\">\n        <div className=\"card-header\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    {props.restaurant ? (\n                        <>\n                            <h4 className=\"text-success\" style={{fontWeight: 800}}>\n                                {props.restaurant.name}\n                            </h4>\n                            <h6 style={{fontWeight: 600}}>\n                                {props.restaurant.location.locality}\n                            </h6>\n                            <h6 className=\"text-muted\">\n                                {props.restaurant.location.address}\n                            </h6>\n                        </>\n                    ): (\n                        <p> Loading </p>\n                    )}\n                </div>\n            </div>\n        </div>\n\n        <div className=\"card-body\">\n            {props.restaurant ? (\n                <div className=\"row\">\n                    <div className=\"col-6\">\n                        <img class=\"img-responsive\" src={props.restaurant.featured_image} alt=\"\" style={{ borderRadius: 5, width: 500}}></img>\n                    </div>\n                    <div className=\"col-6\">\n                        <table className=\"table\">\n                            <tbody>\n                                <tr>\n                                    <td> Rating </td>\n                                    <td>\n                                        <RatingLabel \n                                            labelColor={props.restaurant.user_rating.rating_color}\n                                            text={`${props.restaurant.user_rating.aggregate_rating} (${props.restaurant.user_rating.rating_text})`}\n                                        />\n                                        <h6>{props.restaurant.user_rating.votes} Votes</h6>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td> Cuisines </td>\n                                    <td>\n                                        {props.restaurant.cuisines}\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td> Cost for two </td>\n                                    <td>\n                                        {props.restaurant.currency + ' ' + props.restaurant.average_cost_for_two}\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>  \n            ) : (\n                <p> Loading </p>\n            )}\n        </div>\n    </div>\n)\n\nexport default RestaurantProfile;","import React from 'react'\n\nimport RatingLabel from './RatingLabel'\n\nconst Review = (props) => (\n    <div className=\"card border-success\" style={{marginBottom: 5}}>\n        <div className=\"card-body\">\n            <div className=\"row\" style={{marginBottom: 20}}>\n                <div className=\"col-1\" style={{border: '0px solid black'}}>\n                    <img class=\"img-responsive\" src={props.review.user.profile_image} alt=\"\" style={{borderRadius: '50%', width: 80}}></img>\n                </div>\n                <div className=\"col-11\" style={{border: '0px solid black'}}>\n                    <h6 className=\"font-weight-bold\">{props.review.user.name}</h6>\n                    <RatingLabel\n                        text={`${props.review.user.foodle_level_num} (${props.review.user.foodle_level})`}\n                        labelColor={`${props.review.user.foodle_color}`}\n                    />\n                </div>\n            </div>\n            <h6 className=\"card-text text-muted\">{props.review.review_time_friendly}</h6>\n            <RatingLabel\n                text={`${props.review.rating} (${props.review.rating_text})`}\n                labelColor={`${props.review.rating_color}`}\n            />\n            <p className=\"card-text\">{props.review.review_text}</p>\n        </div>\n    </div>\n)\n\nexport default Review","import React, {Component} from 'react'\nimport axios from 'axios'\nimport { API } from '../config/api'\n\nimport RestaurantProfile from '../components/RestaurantProfile'\nimport Review from '../components/Review'\n\nclass RestaurantDetail extends Component {\n\n    constructor(){\n        super()\n        this.state = {\n            restaurant: null,\n            reviews: null\n        }\n    }\n\n    getRestaurantData = (restaurant_id) => {\n        let url = `${API.zomato.base_url}/restaurant`\n        axios.get(url, {\n            headers: {\n                'user-key': API.zomato.api_key\n            },\n            params: {\n                res_id: restaurant_id\n            }\n        })\n        .then(({ data }) => {\n            this.setState({ restaurant: data })\n        })\n        .catch(err => console.log(err))\n    }\n\n    getReviewsData = (restaurant_id) => {\n        let url = `${API.zomato.base_url}/reviews`\n        axios.get(url, {\n            headers: {\n                'user-key': API.zomato.api_key\n            },\n            params: {\n                res_id: restaurant_id\n            }\n        })\n        .then(({ data }) => {\n            this.setState({ reviews: data.user_reviews })\n        })\n        .catch(err => console.log(err))\n    }\n\n    componentDidMount(){\n        let { params } = this.props.match\n        this.getRestaurantData(params.restaurant_id)\n        this.getReviewsData(params.restaurant_id)\n    }\n\n    render(){\n        return (\n            <div className=\"container\" style={{marginTop: 30, marginBottom: 30}}>\n                <div className=\"row\">\n                    <div className=\"col-12\" style={{marginBottom: 20}}>\n                      <RestaurantProfile restaurant={this.state.restaurant} />  \n                    </div>\n                    <div className=\"col-12\" style={{marginBottom: 20}}>\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <h4 className=\"text-success\" style={{fontWeight: 800}}> Reviews </h4>\n                                {this.state.reviews ? (\n                                    this.state.reviews.map(({ review }) => (\n                                        <Review key={review.id} review={review} />\n                                    ))\n                                ) : (\n                                    <p> Loading... </p>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default RestaurantDetail","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\n\nimport Navbar from './components/Navbar'\nimport Footer from './components/Footer/Footer'\nimport Home from './pages/Home'\nimport City from './pages/City'\nimport RestaurantDetail from './pages/RestaurantDetail'\n\nclass App extends Component {\n\n  render(){   \n    return (\n      <Router>\n        <Navbar />\n        <Route path=\"/\" exact component={Home}></Route>\n        <Route path=\"/city/:city_id\" component={City}></Route>\n        <Route path=\"/restaurant/:restaurant_id\" component={RestaurantDetail}></Route>\n        <Footer />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nrequire('dotenv').config()\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}